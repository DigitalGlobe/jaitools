#summary page dedicated to the implementation of Jiffle in the development version of JGrass

<wiki:toc />

= JGrass aims to use Jiffle =

This page is dedicated to the results of the integration of Jiffle in [http://www.jgrass.org JGrass], a GIS based on the [http://udig.refractions.nert uDig] framework and dedicated to geomorphological and hydrological terrain analyses.
As such Jiffle is a mandatory tool for analyses of raster maps.


= Introduction =

For testing purposes the spearfish dataset it used, since it is a free dataset and avalable [http://grass.itc.it/download/data6.php here].

As introduction it is good to know that JGrass currently bases on [http://grass.osgeo.org/ GRASS]'s [http://grass.itc.it/grass64/manuals/html64_user/r.mapcalc.html r.mapcalc] tool, and has a nifty gui for that one. For these tests the mapcalc of GRASS has been replaced by Jiffle. *Same gui, a bit different usage (Jiffle has more features), same results.* Important that the author of Jiffle has been so kind to work trying to keep as long as possible backwards compatibility with GRASS's r.mapcalc.

So let's start the fun!

= Tests showcase =

Our starting point will be and elevation model and an aspect map. Here it all starts:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_01.png

And that is the tool we will use Jiffle with:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_02.png


== A simple division ==

Lets' try something easy such as dividing a map by two:

{{{
$elevation.dem$ / 2.0
}}}

and the result is NOT as expected:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_03.png

Don't be missleaded by the colormap. That can be changed in any moment and when a map is created in JGrass a default rainbow colormap is created.


== Cutting of the peaks ==

Let's cut of everything over 1500 meters and make a big nice mall with large parking place:

{{{
if($elevation.dem$ > 1500, 1500, $elevation.dem$ )
}}}

And the result... difficult to state the difference, right?

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_04.png

Well in JGrass there is a very sperimental tool (or better a test) that might help:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_05.png

Do you see the parking place?

There would be another way to see if everything went well: subtracting start and destination map:

{{{
$elevation.dem$ - $peaks_off$
}}}

Which would result in: 

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_06.png


== Nested if statements ==

Ok let's try something more complex.

"I want to see the portions of my map that look north-east to sout-east, have a slope below 10 degrees and are in an elevation rage between 800 and 1200 meters."

Easier to say or to do?

{{{
if( $pit$ > 800 && $pit$ < 1200, if( $slope$ < 10, if( $aspect$ > 45 && $aspect$ < 135, 1.0, null() ), null() ), null() )
}}}

I get:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_nested_ifs.png

As can be seen in the raster queries done on the map, in fact the pixels follow the constraints given in the function supplied.


== The ripples ==

You may have seen Micheals short ripples generation script, that leads to the generation of:

http://jai-tools.googlecode.com/svn/wiki/images/demo_ripple.gif

What about doing the same in JGrass putting a map into the game?

So the script would be:
{{{
xc = width() / 2;
yc = height() / 2;
dx = (x()-xc)/xc;
dy = (y()-yc)/yc;
d = sqrt(dx^2 + dy^2);

ripples =  isnull($elevation$) ? null() : $elevation$ * sin(8 * PI * d)
}}}

An see what happens... adding a bit of alpha and the aspect map, we get a huge lake into spearfish:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_ripple.png

