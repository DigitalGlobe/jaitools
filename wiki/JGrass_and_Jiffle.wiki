#summary page dedicated to the implementation of Jiffle in the development version of JGrass

<wiki:toc />

= JGrass aims to use Jiffle =

This page is dedicated to the results of the integration of Jiffle in [http://www.jgrass.org JGrass], a GIS based on the [http://udig.refractions.nert uDig] framework and dedicated to geomorphological and hydrological terrain analyses.
As such Jiffle is a mandatory tool for analyses of raster maps.


= Introduction =

For testing purposes the spearfish dataset it used, since it is a free dataset and avalable [http://grass.itc.it/download/data6.php here].

As introduction it is good to know that JGrass currently bases on [http://grass.osgeo.org/ GRASS]'s [http://grass.itc.it/grass64/manuals/html64_user/r.mapcalc.html r.mapcalc] tool, and has a nifty gui for that one. For these tests the mapcalc of GRASS has been replaced by Jiffle. *Same gui, a bit different usage (Jiffle has more features), same results.* Important that the author of Jiffle has been so kind to work trying to keep as long as possible backwards compatibility with GRASS's r.mapcalc.

So let's start the fun!

= Tests showcase =

Our starting point will be and elevation model and an aspect map. Here it all starts:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_01.png

And that is the tool we will use Jiffle with:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_02.png


== A simple division ==

Lets' try something easy such as dividing a map by two:

{{{
elevation.dem / 2.0
}}}

and the result is as expected:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_03.png

Don't be missleaded by the colormap. That can be changed in any moment and when a map is created in JGrass a default rainbow colormap is created.


== Cutting of the peaks ==

Let's cut of everything over 1500 meters and make a big nice mall with large parking place:

{{{
if(elevation.dem > 1500, 1500, elevation.dem )
}}}

And the result... difficult to state the difference, right?

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_04.png

Well in JGrass there is a very sperimental tool (or better a test) that might help:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_05.png

Do you see the parking place?

There would be another way to see if everything went well: subtracting start and destination map:

{{{
elevation.dem - peaks_off
}}}

Which would result in: 

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_06.png

PROBLEM: Is this exactly what we expected?
Not completely, since the small white borders of the original map, which are novalues, are used to do the difference and end up to be 0. Instead there should be novalue as before. THIS NEEDS TO BE CHECKED ON BOTH SIDES (JGrass & Jiffle)



== Nested if statements ==

Ok let's try something more complex.

"I want to see the portions of my map that look north-east to sout-east, have a slope below 10 degrees and are in an elevation rage between 800 and 1200 meters."

Easier to say or to do?

{{{
if( elevation.dem > 800 && elevation.dem < 1200, if( slope < 10, if( aspect > 45 && aspect < 135, 1.0, null() ), null() ), null() ) 
}}}

I get:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_07.png

which might even look right, but to be sure, let's do some tests and also compare with the GRASS mapcalc.

By selecting two random points of the map, I find a wrong calculated point:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_08.png

Our mapcalc equation states that the resulting map can only have 1.0 and novalues, but here we find also a 0.0. I am pretty sure that this is due to the fact that calculations are done also on novalues, which sometimes leads to 0.0 in differences, which it should always give novalue. This can happen while processing the nested ifs.

By using the same equation in grass, we indeed get a slightly different map, without the additional 0.0 that are created in Jiffle.

Here the GRASS created map overlayed in green, to highlight all the values that should not be there:

http://jai-tools.googlecode.com/svn/wiki/jgrass/jgrass_09.png






