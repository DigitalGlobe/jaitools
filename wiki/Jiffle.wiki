#summary Jiffle: JAI Image Function Language

= Introduction =

The jiffle language is intended to make it easier to create images from expressions 
consisting of mathematical and logical operators, pre-defined and user-defined constants,
and data from input images.

This jiffle script creates concentric sinusoidal ripples radiating from the centre of the image...

<table>
<tr valign="top">
<td>
{{{
// get coords of image centre using the built-in width()
// and height() functions
xc = width() / 2;
yc = height() / 2;

// get distance of current pixel from centre; the
// jiffle functions x() and y() return current pixel
// coords
dx = (x()-xc)/xc;
dy = (y()-yc)/yc;
d = sqrt(dx^2 + dy^2);

// calculate sin of scaled distance and write to
// the current pixel (note: no explicit loop required)
result = sin(8 * PI * d);
}}}
</td>
<td>
<pre>      </pre>
</td>
<td>
http://jai-tools.googlecode.com/svn/wiki/demo_ripple.gif
</td>
</tr>
</table>

This script creates a chessboard pattern. It also demonstrates
some of Jiffle's conditional operators...

<table>
<tr valign="top">
<td>
{{{
// creates an 8 x 8 chessboard pattern

len = width() > height() ? width() : height()
square = floor(len / 8)
edge_pos = square * 8;

odd_row = floor(y() / square) % 2 == 1
odd_col = floor(x() / square) % 2 == 1
inside = x() < edge_pos && y() < edge_pos

result = inside ? (odd_row ^| odd_col) : null
}}}
</td>
<td>
<pre>      </pre>
</td>
<td>
http://jai-tools.googlecode.com/svn/wiki/demo_chessboard.gif
</td>
</tr>
</table>
